/**
\page moveit_benchmarking Benchmarking Motion Planners

MoveIt! includes a number of \ref motion_planning "different planners" that all satisfy a \ref planning_plugin "common interface".
Because of this, we can run different planners on the same problem scenario to compare performance.
If you have a motion planner that satisfies this interface, or that planner is part of a library that satisfies this interface, you can 
benchmark that planner as well.

There are three components to benchmarking:
- The database of problems to run the benchmark on
- The set of algorithms to benchmark
- The tools that execute the different motion planning algorithms on the different problems and record results.

MoveIt! includes all three of these components. This page is about the tools for running the benchmarks.
Please see the page on the \ref moveit_warehouse "MoveIt! Warehouse" for information on databases in MoveIt! and the 
\ref motion_planning "available motion planners" for a list of algorithms that can be benchmarked.

\section installing_benchmark_package Installation

You will need to get the \em moveit_ros_benchmarks package.

On Ubuntu Linux you can install a Debian package:
\verbatim
sudo apt-get install ros-`rosversion -d`-moveit-ros-benchmarks
\endverbatim
For other distributions, please see \ref installation.

\section setup_benchmarking Setting up for benchmarking

We assume you have a package named \em robot_config that is generated by the \ref setup_assistant "MoveIt! Setup Assistant".

If you do not have a database of planning scenes running, you can start one with this command:
\verbatim
roslaunch robot_config warehouse.launch moveit_warehouse_database_path:=/some/path/that/can/be/written/to/
\endverbatim
The host to connect to will be 127.0.0.1 and the port will be 33829.
If you need to construct a planning scene, you can use the \ref rviz_plugin or the \em moveit_save_to_warehouse tool included in the \em moveit_ros_benchmarks package.

\section run_benchmark_server Running the Benchmark Server

You will need to create a launch file (run_server.launch) that includes the settings for the planners you need to run.
\verbatim
<launch>

  <node name="moveit_benchmark_server" pkg="moveit_ros_benchmarks" type="moveit_run_benchmark" respawn="false" output="screen">
   
    <!-- Any parameter needed by planning plugins needs to be loaded here (usually .yaml files) -->
  </node>
  
  <!-- Or, if the parameters are are in their own launch files, they can be loaded here: -->

  <!--
  <include ns="moveit_benchmark_server" file="$(find FOO)/launch/BAR.launch">
  </include>
  -->
</launch>
\endverbatim

This launch file is very simple and just starts an executable from the \em moveit_ros_benchmarks package. However, 
you will need to fill in the parameters the planner plugins to be benchmarked expect. For example, to benchmark planners for
<a href="http://ompl.info">OMPL</a>, the launch file will look something like this:
\verbatim
<launch>

  <node name="moveit_benchmark_server" pkg="moveit_ros_benchmarks" type="moveit_run_benchmark" respawn="false" output="screen">
    <rosparam command="load" file="$(find robot_config)/config/kinematics.yaml"/>
    <rosparam command="load" file="$(find robot_config)/config/ompl_planning.yaml"/>
  </node>

</launch>
\endverbatim

Now run your launch file:
\verbatim
roslaunch run_server.launch
\endverbatim

\section computing_benchmarks Computing Benchmarks

Make sure all the planning plugins you would like to use are built.

The benchmark server offers a ROS service (moveit_msgs::ComputePlanningBenchmark)
which computes benchmarks for a specified list of algorithms and a
specified motion planning request.  The output of this service call is
a .log file which can be \ref visualizing_benchmark_results
"postprocessed".

Filling in the service request can be complex so this is recommended only for advanced users.
Please see ComputePlanningBenchmark.srv for more information on the service request.
Instead, we can use the \em moveit_call_benchmark tool included in the \em moveit_ros_benchmarks
package. This tool will construct benchmark service requests from the database of
planning scenes and one or more configuration files. Use the --host and --port arguments
to specify the host and port of the planning scene database.
\verbatim
moveit_call_benchmark --help
\endverbatim

To trigger the computation of an actual benchmark you will need to pass as argument one or more configuration files:
\verbatim
moveit_call_benchmark config1.cfg [[config2.cfg] ... configN.cfg]
\endverbatim

Each configuration file specifies a benchmark request with respect to the database \em moveit_call_benchmark connects to.
An example configuration file is:
\verbatim
[scene]
name=pole_blocking_right_arm_pan
output=mylocation.log
runs=2

[plugin]
name=ompl_interface_ros/OMPLPlanner
planners=KPIECEkConfigDefault RRTConnectkConfigDefault
runs=10

[plugin]
name=my_lib/myPlanner
planners=planner_name
\endverbatim

This file has two types of section: "scene" and "plugin". The "scene" section (only one) includes the name of the 
planning scene to load from the database and optionally, a location for saving computed data
(a default name will be provided if this is not set), and the number of times to execute each
algorithm for the problem. Multiple executions are needed when the planner is not deterministic
and averaging of results is desired.

The "plugin" section (one or more) specifies the name of the plugin that contains the implementation of
planning_interface::Planner, the names of the planners to execute and can optionally override
the number of runs specified in the "scene" section.

\section visualizing_benchmark_results Visualizing Benchmark Results

The output of the benchmark server can be post-processed to produce results in human readable formats (e.g., plots).  See the scripts/
folder in the \em moveit_ros_benchmarks package and run them with the --help option to see the possible options.

*/
