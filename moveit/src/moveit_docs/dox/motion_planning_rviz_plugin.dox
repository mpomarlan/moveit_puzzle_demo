/**
\page motion_planning_rviz_plugin RViz Plugin for MoveIt!

\section rviz_plugin_overview Overview
MoveIt! comes with an RViz plugin that can be used to compute motion plans, execute them, manage planning scenes, etc. The implementation of the plugin is in the @b moveit_rviz_plugin package, in the @b moveit_ros repository. The recommended installation procedure is to install the deb file for moveit_ros, although compilation from source is also possible.

\section rviz_plugin_setup Setup

The RViz plugin requires that TF frames are published. It does not matter where the TF frames come from, but a good idea is to run the Gazebo simulator or to run on a real robot.

For example, in simulation, one can do the following to start Gazebo:
\code
roslaunch pr2_gazebo pr2_empty_world.launch
\endcode

The RViz plugin uses an action interface to the \ref move_group "move_group node", so we should start that node as well, unless it is already started. You can use: \code rosnode list | grep move_group \endcode to check whether the node is running or not. To start it, use:
\code
roslaunch pr2_moveit_config move_group.launch 
\endcode

To save planning scenes the RViz plugin connects to a database, so starting a warehouse server is also needed. The launch file is configured to take as argument the path to the directory where the database is saved (using MongoDB). If the database is not started the plugin will still work but saving and loading scenes will not be possible.
\code
roslaunch pr2_moveit_config warehouse.launch moveit_warehouse_database_path:=~/moveit_db/
\endcode

Finally, we can start RViz. For interactive markers to work however, we need to perform inverse kinematics. For this reason, pr2_moveit_config/config/kinematics.yaml needs to be loaded in the local namespace of the rviz node. A launch file that does this is provided as well:
\code
roslaunch pr2_moveit_config moveit_rviz.launch
\endcode

At this point we should see the usual RViz window. Next, the "MotionPlanning" display needs to be added. A window that looks like this should appear:

<img src="../images/rviz_plugin/rviz_plugin_initial_view.png" alt="RViz Plugin Initial View" width="800px" />

There are many display options on the left side panel of the plugin, as well as a frame at the bottom. Various options are available. The first thing to do is to set the "Robot Description" property, unless its value is already "robot_description".

It is often preferable to disable some parts of the display to see other parts more clearly. In particular, there can be multiple robots on display:
- The start state robot
  - this robot corresponds to what is designated as a start state when queries are sent to the motion planner
- The goal state robot
  - this robot corresponds to what is designated as a start state when queries are sent to the motion planner
- The current state of the planning scene
  - this robot shows the robot state saved with the planning scene. This does not need to be the same as the robot model, and usually is not, unless an external process is publishing planning scene updates. For example, one can start the planning scene updates from the \ref move_group "move_group node" using dynamic reconfigure:
\code
rosrun dynamic_reconfigure reconfigure_gui
\endcode
    In the window that appears, select "move_group/planning_scene_monitor" and enable publishing of scene updates. In the RViz plugin, select the corresponding topic under "Planning Scene"/"Planning Scene Topic".
- The robot for the currently shown motion plan (as animation). 
   - this is not shown unless a motion plan to display has been previously published. The "Trajectory Topic" property under "Planned Path" needs to be set for this to work.
   - both a "visual" and a "collision" view are available for this robot. The two views correspond to the more detailed visual representation of the robot and the representation used for collision checking, which is more efficient to use, but less visually appealing.

\section rviz_plugin_uses Example Uses

\subsection rviz_plugin_uses_1 Planning for a Random Query

The "Set Random Query" button in the planning frame samples random states for the current group ("Planning Group" property under "Planning Request"). The links that make up the selected group are highlighted. Different highlighting is used for the start and goal states.
<img src="../images/rviz_plugin/rviz_plugin_random_query.png" alt="RViz Plugin Random Query" width="800px" />

It is possible that sometimes some links end up colliding with the robot itself or with obstacles. This situation is shown with another set of highlighted links (the ones that are in collision):
<img src="../images/rviz_plugin/rviz_plugin_collision.png" alt="RViz Plugin Colliding Query" width="800px" />

Once a random query is defined, the "Plan" button can be clicked and a solution should be found. If the "Trajectory Topic" property was appropriately set, the path should animate once in the display. Looping the animation or showing its trail is also possible.
When different algorithms can be used for the planning libary loaded by move_group, their names are shown as well.

To execute a planned query the "Execute" button can be pressed. However, this is not a good idea on the real robot since the start state was sampled at random. The "Set Start To Current" button makes sure the start state is the same as the one the robot is in, so then clicking on "Plan" yet again will yield a solution that can be executed safely on the robot. The "Execute" button can then be pressed. The "Plan and Execute" button will trigger the default \ref move_group "move_group action" where the robot may also be allowed to replan or look around.

\subsection rviz_plugin_uses_2 Setting Queries Interactively

If we click on the "Interact" button of RViz, interactive markers show up for the selected group of the robot, if applicable. Using these interactive markers the robot parts of the slected group can be moved around as desired. Furthermore, as the positions of the links are updated, various metrics can be computed, as can be enabled in the "Planning Metrics" section of the display.
<img src="../images/rviz_plugin/rviz_plugin_interactive_mode.png" alt="RViz Plugin Interactive Mode" width="800px" />

If an interactive marker is moved to a location the robot cannot possibly reach, an error is shown:
<img src="../images/rviz_plugin/rviz_plugin_invalid_request.png" alt="RViz Plugin Impossible Query" width="800px" />

\subsection rviz_plugin_uses_3 Saving and Loading Scened and Queries

In the "Warehouse" tab of the RViz plugin we have the option to connect to the external database. At that point saving the current planning scene and loading saved scenes becomes available.

In conjuction with this functionality, it may be useful to load additional objects (e.g., CAD files) in the "Collision Objects" tab. The content of the CAD files is copied into the planning scene and the CAD files themselves are not referenced in the future.
All objects in the planning scene can be scaled and moved around.

<img src="../images/rviz_plugin/rviz_plugin_loaded_scene.png" alt="RViz Plugin Loaded Scene" width="800px" />

*/
